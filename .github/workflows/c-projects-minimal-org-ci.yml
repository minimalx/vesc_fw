name: C Project CI/CD

# Global anchors (YAML-level, not GH env for `uses:`)
env:
  SUBMODULE_DIR: &SUBMODULE_DIR workflow-templates
  VERSION_ACTION: &VERSION_ACTION ./workflow-templates/actions/version
  FORMATTING_ACTION: &FORMATTING_ACTION ./workflow-templates/actions/formatting

on:
  pull_request:
    branches: [ $default-branch ]
  push:
    branches: [ $default-branch ]

jobs:
  version:
    name: Version & headers
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.ver.outputs.version }}
      version_tag: ${{ steps.ver.outputs.version_tag }}
    steps:
      - name: Checkout (tags + submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0          # needed for semantic-version to see tags
          submodules: recursive   # to pull your local actions submodules

      - name: Version
        id: ver
        uses: *VERSION_ACTION
        with:
          tag-prefix: "v"

  formatting:
    name: Formatting Check
    runs-on: ubuntu-latest
    # Optional: run formatting in parallel to version. If you prefer to wait, add: needs: [version]
    steps:
      - name: Checkout (submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Run formatting
        uses: *FORMATTING_ACTION
        with:
          # On push, base_ref is empty; default to main
          base-ref: ${{ github.event_name == 'pull_request' && github.base_ref || 'main' }}
          changed-exts: "c,cc,cpp,h,proto"


  tag:
    if: github.ref == 'refs/heads/main'
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name  "GitHub Action"
          git tag -a "${{ needs.ver.outputs.version_tag }}" -m "Release ${{ needs.ver.outputs.version_tag }}"
          git push origin "${{ needs.ver.outputs.version_tag }}"

  build:
    needs:
      - version
      - formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Firmware
        run: |
          echo "Building firmware version ${{ needs.ver.outputs.version }}"